$TRANSPILER_OFF

vocabulary test
also test  definitions

\ Core I/O.
: __Lt_pollStdin_                         key? ;
: __U_writeText_                          type ;
: __U_writeLine_                          type cr ;
: __Lt_newLine_                           cr ;

\ Files.
: __Kw_openFileWithMode_                  postpone open-file ; immediate
: __Kw_createFileWithMode_                postpone create-file ; immediate
: __U_closeFile_                          postpone close-file ; immediate

\ Error check.
: __Lt_checkError_                        postpone throw ; immediate

\ Stack manips.

: __Lt_dup_                               postpone dup ; immediate
: __Lt_drop_                              postpone drop ; immediate
: __Lt_swap_                              postpone swap ; immediate
: __Lt_over_                              postpone over ; immediate
: __Lt_nip_                               postpone over ; immediate
: __Lt_rot_                               postpone over ; immediate

\ Bitwise logic, keywords.

: __Kw_and_                               postpone and ; immediate
: __Kw_or_                                postpone or ; immediate
: __Kw_xor_                               postpone xor ; immediate

\ Control flow.

: __Lt_begin_                             postpone begin ; immediate
: __U_thenBreak_                          postpone until ; immediate

\ Misc.

: __U_exit_                               drop bye ;

: __Kw_to_                                postpone ! ; immediate
: __Kw_byteTo_at_                         postpone chars postpone + postpone c! ; immediate
: __Kw_to_at_                             postpone chars postpone + postpone ! ; immediate

$TRANSPILER_ON

////////////////////////////////////////////////////////////////////////////////
// Core I/O.

$DEFINE __Lt_getChar_
$BEGIN
  begin
    pollStdin
  (? <> 0) ~thenBreak
  $RETURN

////////////////////////////////////////////////////////////////////////////////
// Chars.

$DEFINE __Lt_isDigit_
$BEGIN
  dup (? >= 48) swap  ? and: (? <= 57)
  $RETURN

////////////////////////////////////////////////////////////////////////////////
// Boot image generation.

$TRANSPILER_OFF

r/o constant __Ev_READONLY_
r/w constant __Ev_READWRITE_
w/o constant __Ev_WRITEONLY_

variable __Ev_fdIn_           \ Input file descriptor.
variable __Ev_fdOut_          \ Output file descriptor.

variable __Ev_outIndex_       \ Output index.
variable __Ev_outBuffer_      \ Output buffer.

$TRANSPILER_ON

$DEFINE __U_openInput_ // addr u --
$BEGIN
  ? openFileWithMode: !READONLY checkError
  ? to: !fdIn
  $RETURN

$DEFINE __U_openOutput_ // addr u --
$BEGIN
  ? createFileWithMode: !READWRITE checkError
  ? to: !fdOut
  $RETURN

// 0 ~exit

// Generate image.
newLine 'Generating boot image...' ~writeLine

'test.img' ~openOutput
!fdOut ~closeFile

// 0 ~exit

////////////////////////////////////////////////////////////////////////////////
// Test area.

// 11 to: 20 do: ( 12 byteTo: !outBuffer at: !outIndex !outIndex ~inc )
